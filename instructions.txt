$(WSK) action update $(PACKAGE)/$(NAME) $(ZIP) --main $(MAIN) --docker $(OW_RUNTIME)

wsk action update test/main main.zip --main main --docker action-golang-v1.15

# Start OpenWhisk containers
make run

# Stop OpenWhisk containers
make stop

$(WSK_CONFIG_FILE) $(WSK_CLI) -i action create hello hello.js

WSK_CONFIG_FILE=./.wskprops ./openwhisk-src/bin/wsk -i action create hello hello.js

cd /home/abanfi/Documents/private/openwhisk/openwhisk-devtools/docker-compose
WSK_CONFIG_FILE=./.wskprops ./openwhisk-src/bin/wsk -i action list # list of all available actions

# how to create main action frmo go compiled archive main.zip
WSK_CONFIG_FILE=./.wskprops ./openwhisk-src/bin/wsk -i action create main /home/abanfi/Documents/private/openwhisk-runtime-go/examples/read-port/main.zip --main main --docker openwhisk/action-golang-v1.15

wsk -i action create main main.zip --main main --docker openwhisk/action-golang-v1.15

wsk -i action create hello hello.js

wsk action create main main.go


wsk action create main /home/abanfi/Documents/private/openwhisk-runtime-go/examples/read-port/main.zip --kind go:1.15

# invoke the action created above
WSK_CONFIG_FILE=./.wskprops ./openwhisk-src/bin/wsk -i action invoke -r main -p name James

/usr/bin/docker run -d --cpu-shares 256 --memory 256m --memory-swap 256m --network openwhisk_default -e __OW_API_HOST=https://localhost --name wsk0_5_guest_main --cap-drop NET_RAW --cap-drop NET_ADMIN --ulimit nofile=1024:1024 --pids-limit 1024 --log-driver json-file openwhisk/action-golang-v1.15


# OpenWhisk stand alone

# How to start OpenWhisk
./gradlew core:standalone:bootRun

./wsk property set --apihost 'http://172.17.0.1:3233' --auth '23bc46b1-71f6-4ed5-8c54-816aa4f8c502:123zO3xZCLrMN6v2BKK1dXYFpXlPkccOFqm12CdAsMgRU4VrNZ9lyGVCGuMDGIwP'

# Controller address
http://172.17.0.1:3233


docker run openwhisk/action-golang-v1.11 -compile main </home/abanfi/Documents/private/openwhisk-runtime-go/examples/read-port/main.go >main.zip



# Create action hello

./wsk -i action create hello hello.go


sudo ./router 172.17.0.1:3233 MjNiYzQ2YjEtNzFmNi00ZWQ1LThjNTQtODE2YWE0ZjhjNTAyOjEyM3pPM3haQ0xyTU42djJCS0sxZFhZRnBYbFBrY2NPRnFtMTJDZEFzTWdSVTRWck5aOWx5R1ZDR3VNREdJd1A hello


# compile sources from zip file

docker run -i openwhisk/action-golang-v1.15:nightly -compile main <hello-src.zip >hello-bin.zip

./wsk action update hello hello-bin.zip --main main --docker openwhisk/action-golang-v1.15:nightly

./wsk action create nat nat-bin.zip --main main --docker openwhisk/action-golang-v1.15:nightly
./wsk action create dhcp dhcp-bin.zip --main main --docker openwhisk/action-golang-v1.15:nightly

http://172.17.0.1:3233

docker run -d --cpu-shares 256 --memory 256m --memory-swap 256m --network openwhisk_default -e __OW_API_HOST=https://localhost --name wsk0_5_guest_main --cap-drop NET_RAW --cap-drop NET_ADMIN --ulimit nofile=1024:1024 --pids-limit 1024 --log-driver json-file -v /home/abanfi/Documents/private/openwhisk/examples/inner:/root openwhisk/action-golang-v1.15


sudo ./faasrouter enp6s0f0 172.17.0.1:3233 MjNiYzQ2YjEtNzFmNi00ZWQ1LThjNTQtODE2YWE0ZjhjNTAyOjEyM3pPM3haQ0xyTU42djJCS0sxZFhZRnBYbFBrY2NPRnFtMTJDZEFzTWdSVTRWck5aOWx5R1ZDR3VNREdJd1A 172.17.0.1:6379
wlp2s0:

-----------------------------

cd openwhisk
./gradlew :core:standalone:build

cd bin

cat <<'EOF' > custom.conf
include classpath("standalone.conf")

whisk {
  config {
    controller-instances = 1
    limits-actions-sequence-maxLength = 50
    limits-triggers-fires-perMinute = 999
    limits-actions-invokes-perMinute = 999
    limits-actions-invokes-concurrent = 250
  }

  container-pool {
    user-memory: 32768 m
  }

  memory {
    min: 64
  }
}
EOF

java -jar openwhisk-standalone.jar --no-ui -c custom.conf

file to edit -> ./core/invoker/src/main/scala/org/apache/openwhisk/core/containerpool/docker/DockerContainer.scala